---
- hosts: all
  vars:
    ruby_version: '2.3.1'
    user: 'vagrant'
    home: '/home/{{ user }}'
    rbenv_root: '{{ home }}/.rbenv'
    rbenv_bash: '{{ home }}/.bash_profile'
    ror_ecom: '{{ home }}/ror_ecommerce'

  tasks:

  - name: Install the rbenv and Ruby dependencies
    apt: name={{ item }} update_cache=yes
    with_items:
       - git-core
       - curl
       - zlib1g-dev
       - build-essential
       - libssl-dev
       - libreadline-dev
       - libyaml-dev
       - libsqlite3-dev
       - sqlite3
       - libxml2-dev
       - libxslt1-dev
       - libcurl4-openssl-dev
       - python-software-properties
       - libffi-dev
    sudo: yes

### Install rbenv
  - name: Install rbenv
    git: repo=git://github.com/sstephenson/rbenv.git dest="{{ rbenv_root }}"

  - name: Install pluging rbenv
    git: repo=git://github.com/sstephenson/ruby-build.git dest="{{ rbenv_root }}/plugins/ruby-build"

  - name: Add pluging rbenv bin to PATH
    shell: echo 'export PATH="{{ rbenv_root }}/plugins/ruby-build/bin:$PATH"' >> "{{ rbenv_bash }}"

  - name: Add rbenv bin to PATH
    shell: echo 'export PATH="{{ rbenv_root }}/bin:$PATH"' >> "{{ rbenv_bash }}"

  - name: Add eval for rbenv
    shell: echo 'eval "$(rbenv init -)"' >> "{{ rbenv_bash }}"

  - name: Check rbenv instalanion
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv -v'

### Install Ruby and Rails
  - name: Install Ruby with disabling the doc building step
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" RUBY_CONFIGURE_OPTS=--disable-install-doc rbenv install -v {{ ruby_version }}'

  - name: Set global the new Ruby {{ ruby_version }}
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv global {{ ruby_version }}'

  - name: Check ruby version
    shell: 'cat "{{ rbenv_root }}/version"'

  - name: rbenv rehash
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv rehash'

  - name: 'create .gemrc'
    lineinfile: 'dest="{{ home }}/.gemrc" line="gem: --no-ri --no-rdoc" create=yes'

  - name: Install bundler
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv exec gem install bundler'

  - name: Install Rails
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv exec gem install rails'

  - name: Check rails version
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/shims:$PATH" rails -v'

### Install Javascript Runtime
  - name: Add the Node.js PPA to apt-get
    apt_repository: repo='ppa:chris-lea/node.js' update_cache=yes
    sudo: yes

  - name: Install Javascript Runtime
    apt: name=nodejs
    sudo: yes

### Install Foreman
  - name: Install Foreman
    shell: 'RBENV_ROOT={{ rbenv_root }} PATH="$RBENV_ROOT/bin:$PATH" rbenv exec gem install foreman'

### Install ROR-ecomerce
  - name: Install ror-ecommerce application
    git: repo=git://github.com/drhenner/ror_ecommerce.git dest="{{ ror_ecom }}"

  - name: Copy the database.yml for setup for SQLite3
    shell: 'cp config/database.yml.sqlite3 config/database.yml'
    args:
      chdir: "{{ ror_ecom }}"

  - name: Uncomment line SQLite3 in Gemfile
    lineinfile: "dest={{ ror_ecom }}/Gemfile regexp='.gem 'sqlite3'' insertafter='#' line='  gem 'sqlite3'' state=present"

  - name: Install ror-ecommerce  dependencies
    apt: name={{ item }} update_cache=yes
    with_items:
       - libmagickwand-dev
       - libpq-dev
       - libmysqlclient-dev
    sudo: yes

  - name: Copy ssh-key "cert" for bundler working throught ssh (not https) with GitHub
    shell: 'cp /vagrant/cert "{{ home }}/.ssh"'
    sudo: yes

  - name: Make right permissions and owner/group to key file
    file: 'path={{ home }}/.ssh/cert owner={{ user }} group={{ user }} mode=0600'
    sudo: yes

  - name: Run ssh agent and add key to it
    shell: 'eval $(ssh-agent -s) && ssh-add "{{ home }}/.ssh/cert"'
    sudo: yes

  - name: Get github server fingerprint
    shell: 'ssh -o "StrictHostKeyChecking no" git@github.com &> /dev/null'

#  - name: bundle
#    shell: bundle install
#    args:
#      chdir: "{{ ror_ecom }}"

  - name: bundle
    bundler: state=present executable={{ ror_ecom }}/bin/bundle gemfile={{ ror_ecom }}/Gemfile

  - name: Get rake encryption key to var 
    shell: 'rake secret'
    args:
      chdir: "{{ ror_ecom }}"
    register: encr_key

  - name: Add encryption_key to settings playbook
    lineinfile: "dest={{ ror_ecom }}/config/settings.yml regexp='^encryption_key:' line='encryption_key: {{ encr_key.stdout }}'"

  - name: rake db:create:all
    shell: 'rake db:create:all'
    args:
      chdir: "{{ ror_ecom }}"

  - name: rake db:migrate db:seed
    shell: 'rake db:migrate db:seed'
    args:
      chdir: "{{ ror_ecom }}"

  - name: RAILS_ENV=test rake db:test:prepare
    shell: 'RAILS_ENV=test rake db:test:prepare'
    args:
      chdir: "{{ ror_ecom }}"

  - name: RAILS_ENV=test rake db:seed
    shell: 'RAILS_ENV=test rake db:seed'
    args:
      chdir: "{{ ror_ecom }}"

  - name: rails server
    shell: 'rails server'
    args:
      chdir: "{{ ror_ecom }}"


